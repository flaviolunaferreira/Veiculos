version: '3.8'

services:
  normalize-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: normalize-app
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://normalize-postgres:5432/normalize_db
      - SPRING_DATASOURCE_USERNAME=normalize_user
      - SPRING_DATASOURCE_PASSWORD=normalize_pass
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - normalize-postgres
      - kafka
      - zipkin
    networks:
      - normalize-network

  normalize-postgres:
    image: postgres:16-alpine
    container_name: normalize-postgres
    environment:
      POSTGRES_DB: normalize_db
      POSTGRES_USER: normalize_user
      POSTGRES_PASSWORD: normalize_pass
    ports:
      - "5433:5432"
    volumes:
      - normalize-postgres-data:/var/lib/postgresql/data
    networks:
      - normalize-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: normalize-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - normalize-network

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: normalize-zipkin
    ports:
      - "9411:9411"
    networks:
      - normalize-network

volumes:
  normalize-postgres-data:

networks:
  normalize-network:
    driver: bridge

