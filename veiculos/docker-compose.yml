version: '3.8'

services:
  # --- NOSSA APLICAÇÃO ---
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATA_MONGODB_URI=mongodb://user:pass@mongo-db:27017/idempotency_store?authSource=admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      # Supplier URLs (Mocks via WireMock)
      - SUPPLIERS_F1_URL=http://mocks:8080/ws/f1
      - SUPPLIERS_F2_URL=http://mocks:8080/api/f2
      - SUPPLIERS_F3_URL=http://mocks:8080/api/f3
    depends_on:
      - mongo-db
      - kafka
      - zipkin
      - mocks
    networks:
      - desafio-net

  # --- KAFKA & ZOOKEEPER ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - desafio-net

  kafka:
    image: confluentinc/cp-kafka:7.3.3
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - desafio-net

  # --- MONGODB (Idempotência) ---
  mongo-db:
    image: mongo:7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=idempotency_store
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - desafio-net

  # --- ZIPKIN (Tracing) ---
  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - desafio-net

  # --- MOCKS (WireMock) ---
  mocks:
    image: wiremock/wiremock:latest
    ports:
      - "9090:8080"
    command: ["--port", "8080"]
    networks:
      - desafio-net

networks:
  desafio-net:
    driver: bridge

volumes:
  mongo_data:
