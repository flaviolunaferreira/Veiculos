version: '3.8'

services:
  # --- NOSSA APLICAÇÃO ---
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=veiculos_db
      - DB_USER=user
      - DB_PASS=pass
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
      # Mocks (WireMock)
      - NORMALIZATION_API_URL=http://mocks:9090
      - F1_SOAP_URL=http://mocks:9090/ws/f1
      - F2_REST_URL=http://mocks:9090/api/f2
      - F3_REST_URL=http://mocks:9090/api/f3
    depends_on:
      - postgres
      - kafka
      - mocks
    networks:
      - desafio-net

  # --- BANCO DE DADOS (PostgreSQL) ---
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=veiculos_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d # Para rodar scripts SQL (Flyway/Liquibase)
    networks:
      - desafio-net

  # --- KAFKA & ZOOKEEPER ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - desafio-net

  kafka:
    image: confluentinc/cp-kafka:7.3.3
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - desafio-net

  # --- MOCKS (WireMock) ---
  mocks:
    image: wiremock/wiremock:latest
    ports:
      - "9090:9090"
    volumes:
      - ./src/test/resources/wiremock:/home/wiremock # Mapeia mocks de teste
    networks:
      - desafio-net

networks:
  desafio-net:
    driver: bridge

volumes:
  postgres_data: